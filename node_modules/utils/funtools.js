//funtools.js

const add1 = n => n + 1
const dbl = n => n * 2

// id: A -> A
const id       = x => x
// compose2: (B -> C) -> (A -> B) -> (A -> C)
const compose2 = (f,g) => (x => f(g(x)))
// swap: (A -> B -> C) -> (B -> A -> C)
const swap     = f => ((x,y) => f(y,x))
// compose: (Xn -> Xn+1) -> ... -> (X1 -> X2) -> (X1 -> Xn+1)
const compose  = (...fs) => [...fs].reduceRight(swap(compose2),id)

module.exports.add1    = add1
module.exports.dbl  = dbl
module.exports.swap = swap
module.exports.compose = compose