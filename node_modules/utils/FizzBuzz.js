//FizzBuzz.js

//
//const range = require('utils/imptools.js').range

//
const compose = require('utils/funtools.js').compose

// Pair: [A,B]
const Pairs = require('utils/Pairs.js');
const pair  = Pairs.pair
const fst   = Pairs.fst
const snd   = Pairs.snd

// Config: Pair<Pair<number, string>, Pair<number, string>>
const default_cfg = pair(pair(3, 'Fizz'), pair(5, 'Buzz'))

// Config -> number
const fizz_num = compose(fst, fst)
const buzz_num = compose(fst, snd)

// Config -> string
const fizz_str = compose(snd, fst)
const buzz_str = compose(snd, snd)

// number -> number -> boolean
const divides = (a, b) => b % a === 0

// (Config -> number) -> (Config -> (number -> boolean))
const config_div = f => (cfg => (n => divides(f(cfg), n)))

// Config -> (number -> boolean)
const config_fizz_div = config_div(fizz_num)
const config_buzz_div = config_div(buzz_num)

// (Config -> string) -> (Config -> (number -> boolean)) -> string -> (Config -> (number -> string))
const config_msg = (cfg_str, cfg_prd, alt_str) =>
      (cfg => (n => cfg_prd(cfg)(n) ? cfg_str(cfg) : alt_str))

// Config -> (number -> string)
const config_fizz_msg = config_msg(fizz_str, config_fizz_div, '')
const config_buzz_msg = config_msg(buzz_str, config_buzz_div, '')

// Config -> (number -> Pair<number, string>)
const config_fizzbuzz_pair =
      cfg => (n => pair(n, config_fizz_msg(cfg)(n) + config_buzz_msg(cfg)(n)))

// Config -> [number] -> [Pair<number, string>]
const fizzbuzz = (cfg, range) => 
      range.map(config_fizzbuzz_pair(cfg))
           .filter(p => snd(p) !== '')

//module.exports.default_cfg = default_cfg
//module.exports.fizz_num = fizz_num
//module.exports.buzz_num = buzz_num
//module.exports.fizz_str = fizz_str
//module.exports.buzz_str = buzz_str
//module.exports.config_fizz_div = config_fizz_div
//module.exports.config_buzz_div = config_buzz_div
//module.exports.config_fizz_msg = config_fizz_msg
//module.exports.config_buzz_msg = config_buzz_msg
//module.exports.config_fizzbuzz_pair = config_fizzbuzz_pair
module.exports.fizzbuzz = fizzbuzz
